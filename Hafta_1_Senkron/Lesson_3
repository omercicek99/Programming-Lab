def get_n_random_numbers(n=10,min_=-5,max_=5):
    numbers=[]
    for i in range(n):
        numbers.append(random.randint(min_,max_)
    return numbers
get_n_random_numbers()

#Lineer search on list 

def my_lineer_search (my-list,item_search):
    found= (-1,-1)
    n=len (my_list) 
    for indis in range (n):
        if my_list [indis]== item_search:
            found= (my_list[indis], indis)
            #break  //KARŞISINA ÇIKAN İLK ARANAN ELEMAN DA DÖNGÜDEN ÇIKAR
    return found         
my_list=[-4,-3,-2,-3,-3,-1,3,-3,5,1]

my_linear_search (my_list,1)

->>>(1,9)

#mean of list 

def my_mean (my_list):
    s,t=0,0
    for item in my_list:
        s=s+1
        t=t+item
    mean=t/s
    print(mean)
    
->>>3,8333333335

my_list= get_n_random_numbers (10,-50,50)
print (my_list)
my_mean (my_list)

->>> [13,-26,-50,26,-16,-33,2,6,20,38]
->>>-2


#sort the list

my_list= [-2,-5,1,5]

def hubble_sort (my_list):
    n=len (my_list)
    for i m range (n-1,-1,-1):
        for j in range (0,1):
            if not (my_list[j] < my_list[j+1]):
               temp= my_list[j]
               my_list[j] = my_list[j+1]
               my_list[j+1] =temp
    return my_list 
    
#binary search ona sorted list

def my_binary_search (my_list, item_search):
    found = (-1,-1)
    low= 0
    high= len (my_list) -1 
    
    while low <= high:
        mid =(low + high) //2 
        
        if my_list [mid] == item_search:
            return my_list [mid], mid 
        elif my_list [mid] > item_search:
            high = mid -1 
        else:
            low = mid +1 
    return found
   
 
 #median of a list
 
 size = input ("dizi boyutunu girin")
 size = int(size)
 my_list_1 = get_n_random_numbers (size)
 print ("list", my_list_1)
 ->>>liste [-5,5,3,3,5,-4,0]
 
 my_list_2 = buble_sort ( my_list_1 )
 
 n=len (my_list_2)
 
 if( n%2 == 1):
    middle = int (n(2)+1
    median = my_list_2 [middle]
    print (median)
    
else:
    middle_1 = my_list_2 [int(n/2)]
    middle_2 = my_list_2 [in (n/2) +1]
    median = (middle_1 + middle_2)/2
    print(median)
   
->>>[-10,-9,-2,-1,0,1,1,2,5,6,1]
1
 
 
 
      
        
      
    
      
